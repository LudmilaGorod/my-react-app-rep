import React, { useState, useEffect, useRef } from 'react';
import './ChatWidget.css'; // –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç–∏–ª–∏

function ChatWidget() {
  const [isOpen, setIsOpen] = useState(false);
  const chatRef = useRef(null); // –°–æ–∑–¥–∞–µ–º —Ä–µ—Ñ –¥–ª—è —á–∞—Ç–∞

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∏ –∑–∞–∫—Ä—ã—Ç–∏—è —á–∞—Ç–∞
  const toggleChat = () => {
    setIsOpen(!isOpen);
  };

  // –ó–∞–∫—Ä—ã–≤–∞–µ–º —á–∞—Ç, –µ—Å–ª–∏ –∫–ª–∏–∫ –ø—Ä–æ–∏–∑–æ—à–µ–ª –≤–Ω–µ –µ–≥–æ –æ–±–ª–∞—Å—Ç–∏
  const handleClickOutside = (event) => {
    if (chatRef.current && !chatRef.current.contains(event.target)) {
      setIsOpen(false);
    }
  };

  // –î–æ–±–∞–≤–ª—è–µ–º –∏ —É–¥–∞–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–ª–∏–∫–∞ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–µ
  useEffect(() => {
    if (isOpen) {
      document.addEventListener('mousedown', handleClickOutside);
    } else {
      document.removeEventListener('mousedown', handleClickOutside);
    }
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, [isOpen]);

  return (
    <div className="chat-widget-container">
      {/* –ò–∫–æ–Ω–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∏ –∑–∞–∫—Ä—ã—Ç–∏—è —á–∞—Ç–∞ */}
      <div className={`chat-icon ${isOpen ? 'open' : ''}`} onClick={toggleChat}>
        üì©
      </div>

      {/* –û–∫–Ω–æ —á–∞—Ç–∞, –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Ä–µ—Ñ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–ª–∏–∫–æ–≤ */}
      {isOpen && (
        <div className="chat-window" ref={chatRef}>
          <div className="chat-header">
            <h4>–ß–∞—Ç</h4>
            <button onClick={toggleChat}>‚ùå</button>
          </div>
          <div className="chat-messages">
            <p>–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å?</p>
          </div>
          <input type="text" placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç..." />
        </div>
      )}
    </div>
  );
}

export default ChatWidget;
